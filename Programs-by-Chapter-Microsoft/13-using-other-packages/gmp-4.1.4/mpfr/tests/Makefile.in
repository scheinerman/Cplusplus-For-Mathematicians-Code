# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
ANSI2KNR = $(top_builddir)/ansi2knr
check_PROGRAMS = tversion$(EXEEXT) tinits$(EXEEXT) tsgn$(EXEEXT) \
	tcheck$(EXEEXT) tisnan$(EXEEXT) texceptions$(EXEEXT) \
	tset_exp$(EXEEXT) tset$(EXEEXT) tabs$(EXEEXT) tset_d$(EXEEXT) \
	tset_f$(EXEEXT) tset_q$(EXEEXT) tset_si$(EXEEXT) \
	tset_str$(EXEEXT) tset_z$(EXEEXT) tset_ld$(EXEEXT) \
	tset_sj$(EXEEXT) tswap$(EXEEXT) tcopysign$(EXEEXT) \
	tcmp$(EXEEXT) tcmp2$(EXEEXT) tcmpabs$(EXEEXT) tcmp_d$(EXEEXT) \
	tcmp_ld$(EXEEXT) tcomparisons$(EXEEXT) teq$(EXEEXT) \
	tadd$(EXEEXT) tsub$(EXEEXT) tmul$(EXEEXT) tdiv$(EXEEXT) \
	tsub1sp$(EXEEXT) tadd1sp$(EXEEXT) tadd_ui$(EXEEXT) \
	tsub_ui$(EXEEXT) tcmp_ui$(EXEEXT) tdiv_ui$(EXEEXT) \
	tmul_ui$(EXEEXT) tsqrt_ui$(EXEEXT) tui_div$(EXEEXT) \
	tui_sub$(EXEEXT) tgmpop$(EXEEXT) tsi_op$(EXEEXT) \
	tmul_2exp$(EXEEXT) tfma$(EXEEXT) tsum$(EXEEXT) tdim$(EXEEXT) \
	tminmax$(EXEEXT) tnext$(EXEEXT) tfits$(EXEEXT) tget_d$(EXEEXT) \
	tget_d_2exp$(EXEEXT) tget_z$(EXEEXT) tget_str$(EXEEXT) \
	tget_sj$(EXEEXT) tout_str$(EXEEXT) tinp_str$(EXEEXT) \
	toutimpl$(EXEEXT) tcan_round$(EXEEXT) tround_prec$(EXEEXT) \
	tsqrt$(EXEEXT) tconst_log2$(EXEEXT) tconst_pi$(EXEEXT) \
	tconst_euler$(EXEEXT) trandom$(EXEEXT) ttrunc$(EXEEXT) \
	trint$(EXEEXT) tfrac$(EXEEXT) texp$(EXEEXT) texp2$(EXEEXT) \
	texpm1$(EXEEXT) tlog$(EXEEXT) tlog2$(EXEEXT) tlog10$(EXEEXT) \
	tlog1p$(EXEEXT) tpow$(EXEEXT) tui_pow$(EXEEXT) tpow3$(EXEEXT) \
	tcosh$(EXEEXT) tsinh$(EXEEXT) ttanh$(EXEEXT) tacosh$(EXEEXT) \
	tasinh$(EXEEXT) tatanh$(EXEEXT) thyperbolic$(EXEEXT) \
	tasin$(EXEEXT) tacos$(EXEEXT) tcos$(EXEEXT) tatan$(EXEEXT) \
	tsin$(EXEEXT) ttan$(EXEEXT) tsin_cos$(EXEEXT) tagm$(EXEEXT) \
	thypot$(EXEEXT) tfactorial$(EXEEXT) tgamma$(EXEEXT) \
	terf$(EXEEXT) tcbrt$(EXEEXT) tzeta$(EXEEXT) \
	mpf_compat$(EXEEXT) mpfr_compat$(EXEEXT) reuse$(EXEEXT) \
	tsqr$(EXEEXT) tstrtofr$(EXEEXT) tpow_z$(EXEEXT) \
	tget_f$(EXEEXT) tconst_catalan$(EXEEXT) troot$(EXEEXT) \
	tsec$(EXEEXT) tcsc$(EXEEXT) tcot$(EXEEXT) teint$(EXEEXT) \
	tcoth$(EXEEXT) tcsch$(EXEEXT) tsech$(EXEEXT) \
	tstckintc$(EXEEXT) tsubnormal$(EXEEXT) tlngamma$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
libfrtests_la_LIBADD =
am_libfrtests_la_OBJECTS = memory$U.lo rnd_mode$U.lo tests$U.lo \
	cmp_str$U.lo
libfrtests_la_OBJECTS = $(am_libfrtests_la_OBJECTS)
mpf_compat_SOURCES = mpf_compat.c
mpf_compat_OBJECTS = mpf_compat$U.$(OBJEXT)
mpf_compat_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
mpf_compat_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
mpfr_compat_SOURCES = mpfr_compat.c
mpfr_compat_OBJECTS = mpfr_compat$U.$(OBJEXT)
mpfr_compat_LDADD = $(LDADD)
mpfr_compat_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
reuse_SOURCES = reuse.c
reuse_OBJECTS = reuse$U.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tabs_SOURCES = tabs.c
tabs_OBJECTS = tabs$U.$(OBJEXT)
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tacos_SOURCES = tacos.c
tacos_OBJECTS = tacos$U.$(OBJEXT)
tacos_LDADD = $(LDADD)
tacos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tacosh_SOURCES = tacosh.c
tacosh_OBJECTS = tacosh$U.$(OBJEXT)
tacosh_LDADD = $(LDADD)
tacosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tadd_SOURCES = tadd.c
tadd_OBJECTS = tadd$U.$(OBJEXT)
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tadd1sp_SOURCES = tadd1sp.c
tadd1sp_OBJECTS = tadd1sp$U.$(OBJEXT)
tadd1sp_LDADD = $(LDADD)
tadd1sp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tadd_ui_SOURCES = tadd_ui.c
tadd_ui_OBJECTS = tadd_ui$U.$(OBJEXT)
tadd_ui_LDADD = $(LDADD)
tadd_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tagm_SOURCES = tagm.c
tagm_OBJECTS = tagm$U.$(OBJEXT)
tagm_LDADD = $(LDADD)
tagm_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tasin_SOURCES = tasin.c
tasin_OBJECTS = tasin$U.$(OBJEXT)
tasin_LDADD = $(LDADD)
tasin_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tasinh_SOURCES = tasinh.c
tasinh_OBJECTS = tasinh$U.$(OBJEXT)
tasinh_LDADD = $(LDADD)
tasinh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tatan_SOURCES = tatan.c
tatan_OBJECTS = tatan$U.$(OBJEXT)
tatan_LDADD = $(LDADD)
tatan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tatanh_SOURCES = tatanh.c
tatanh_OBJECTS = tatanh$U.$(OBJEXT)
tatanh_LDADD = $(LDADD)
tatanh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcan_round_SOURCES = tcan_round.c
tcan_round_OBJECTS = tcan_round$U.$(OBJEXT)
tcan_round_LDADD = $(LDADD)
tcan_round_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcbrt_SOURCES = tcbrt.c
tcbrt_OBJECTS = tcbrt$U.$(OBJEXT)
tcbrt_LDADD = $(LDADD)
tcbrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcheck_SOURCES = tcheck.c
tcheck_OBJECTS = tcheck$U.$(OBJEXT)
tcheck_LDADD = $(LDADD)
tcheck_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_SOURCES = tcmp.c
tcmp_OBJECTS = tcmp$U.$(OBJEXT)
tcmp_LDADD = $(LDADD)
tcmp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp2_SOURCES = tcmp2.c
tcmp2_OBJECTS = tcmp2$U.$(OBJEXT)
tcmp2_LDADD = $(LDADD)
tcmp2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_d_SOURCES = tcmp_d.c
tcmp_d_OBJECTS = tcmp_d$U.$(OBJEXT)
tcmp_d_LDADD = $(LDADD)
tcmp_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_ld_SOURCES = tcmp_ld.c
tcmp_ld_OBJECTS = tcmp_ld$U.$(OBJEXT)
tcmp_ld_LDADD = $(LDADD)
tcmp_ld_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_ui_SOURCES = tcmp_ui.c
tcmp_ui_OBJECTS = tcmp_ui$U.$(OBJEXT)
tcmp_ui_LDADD = $(LDADD)
tcmp_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmpabs_SOURCES = tcmpabs.c
tcmpabs_OBJECTS = tcmpabs$U.$(OBJEXT)
tcmpabs_LDADD = $(LDADD)
tcmpabs_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcomparisons_SOURCES = tcomparisons.c
tcomparisons_OBJECTS = tcomparisons$U.$(OBJEXT)
tcomparisons_LDADD = $(LDADD)
tcomparisons_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_catalan_SOURCES = tconst_catalan.c
tconst_catalan_OBJECTS = tconst_catalan$U.$(OBJEXT)
tconst_catalan_LDADD = $(LDADD)
tconst_catalan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_euler_SOURCES = tconst_euler.c
tconst_euler_OBJECTS = tconst_euler$U.$(OBJEXT)
tconst_euler_LDADD = $(LDADD)
tconst_euler_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_log2_SOURCES = tconst_log2.c
tconst_log2_OBJECTS = tconst_log2$U.$(OBJEXT)
tconst_log2_LDADD = $(LDADD)
tconst_log2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_pi_SOURCES = tconst_pi.c
tconst_pi_OBJECTS = tconst_pi$U.$(OBJEXT)
tconst_pi_LDADD = $(LDADD)
tconst_pi_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcopysign_SOURCES = tcopysign.c
tcopysign_OBJECTS = tcopysign$U.$(OBJEXT)
tcopysign_LDADD = $(LDADD)
tcopysign_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcos_SOURCES = tcos.c
tcos_OBJECTS = tcos$U.$(OBJEXT)
tcos_LDADD = $(LDADD)
tcos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcosh_SOURCES = tcosh.c
tcosh_OBJECTS = tcosh$U.$(OBJEXT)
tcosh_LDADD = $(LDADD)
tcosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcot_SOURCES = tcot.c
tcot_OBJECTS = tcot$U.$(OBJEXT)
tcot_LDADD = $(LDADD)
tcot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcoth_SOURCES = tcoth.c
tcoth_OBJECTS = tcoth$U.$(OBJEXT)
tcoth_LDADD = $(LDADD)
tcoth_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcsc_SOURCES = tcsc.c
tcsc_OBJECTS = tcsc$U.$(OBJEXT)
tcsc_LDADD = $(LDADD)
tcsc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcsch_SOURCES = tcsch.c
tcsch_OBJECTS = tcsch$U.$(OBJEXT)
tcsch_LDADD = $(LDADD)
tcsch_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdim_SOURCES = tdim.c
tdim_OBJECTS = tdim$U.$(OBJEXT)
tdim_LDADD = $(LDADD)
tdim_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS = tdiv$U.$(OBJEXT)
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdiv_ui_SOURCES = tdiv_ui.c
tdiv_ui_OBJECTS = tdiv_ui$U.$(OBJEXT)
tdiv_ui_LDADD = $(LDADD)
tdiv_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
teint_SOURCES = teint.c
teint_OBJECTS = teint$U.$(OBJEXT)
teint_LDADD = $(LDADD)
teint_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
teq_SOURCES = teq.c
teq_OBJECTS = teq$U.$(OBJEXT)
teq_LDADD = $(LDADD)
teq_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
terf_SOURCES = terf.c
terf_OBJECTS = terf$U.$(OBJEXT)
terf_LDADD = $(LDADD)
terf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texceptions_SOURCES = texceptions.c
texceptions_OBJECTS = texceptions$U.$(OBJEXT)
texceptions_LDADD = $(LDADD)
texceptions_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texp_SOURCES = texp.c
texp_OBJECTS = texp$U.$(OBJEXT)
texp_LDADD = $(LDADD)
texp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texp2_SOURCES = texp2.c
texp2_OBJECTS = texp2$U.$(OBJEXT)
texp2_LDADD = $(LDADD)
texp2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texpm1_SOURCES = texpm1.c
texpm1_OBJECTS = texpm1$U.$(OBJEXT)
texpm1_LDADD = $(LDADD)
texpm1_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfactorial_SOURCES = tfactorial.c
tfactorial_OBJECTS = tfactorial$U.$(OBJEXT)
tfactorial_LDADD = $(LDADD)
tfactorial_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfits_SOURCES = tfits.c
tfits_OBJECTS = tfits$U.$(OBJEXT)
tfits_LDADD = $(LDADD)
tfits_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfma_SOURCES = tfma.c
tfma_OBJECTS = tfma$U.$(OBJEXT)
tfma_LDADD = $(LDADD)
tfma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfrac_SOURCES = tfrac.c
tfrac_OBJECTS = tfrac$U.$(OBJEXT)
tfrac_LDADD = $(LDADD)
tfrac_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tgamma_SOURCES = tgamma.c
tgamma_OBJECTS = tgamma$U.$(OBJEXT)
tgamma_LDADD = $(LDADD)
tgamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_d_SOURCES = tget_d.c
tget_d_OBJECTS = tget_d$U.$(OBJEXT)
tget_d_LDADD = $(LDADD)
tget_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_d_2exp_SOURCES = tget_d_2exp.c
tget_d_2exp_OBJECTS = tget_d_2exp$U.$(OBJEXT)
tget_d_2exp_LDADD = $(LDADD)
tget_d_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_f_SOURCES = tget_f.c
tget_f_OBJECTS = tget_f$U.$(OBJEXT)
tget_f_LDADD = $(LDADD)
tget_f_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_sj_SOURCES = tget_sj.c
tget_sj_OBJECTS = tget_sj$U.$(OBJEXT)
tget_sj_LDADD = $(LDADD)
tget_sj_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_str_SOURCES = tget_str.c
tget_str_OBJECTS = tget_str$U.$(OBJEXT)
tget_str_LDADD = $(LDADD)
tget_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_z_SOURCES = tget_z.c
tget_z_OBJECTS = tget_z$U.$(OBJEXT)
tget_z_LDADD = $(LDADD)
tget_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tgmpop_SOURCES = tgmpop.c
tgmpop_OBJECTS = tgmpop$U.$(OBJEXT)
tgmpop_LDADD = $(LDADD)
tgmpop_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
thyperbolic_SOURCES = thyperbolic.c
thyperbolic_OBJECTS = thyperbolic$U.$(OBJEXT)
thyperbolic_LDADD = $(LDADD)
thyperbolic_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
thypot_SOURCES = thypot.c
thypot_OBJECTS = thypot$U.$(OBJEXT)
thypot_LDADD = $(LDADD)
thypot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tinits_SOURCES = tinits.c
tinits_OBJECTS = tinits$U.$(OBJEXT)
tinits_LDADD = $(LDADD)
tinits_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tinp_str_SOURCES = tinp_str.c
tinp_str_OBJECTS = tinp_str$U.$(OBJEXT)
tinp_str_LDADD = $(LDADD)
tinp_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tisnan_SOURCES = tisnan.c
tisnan_OBJECTS = tisnan$U.$(OBJEXT)
tisnan_LDADD = $(LDADD)
tisnan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlngamma_SOURCES = tlngamma.c
tlngamma_OBJECTS = tlngamma$U.$(OBJEXT)
tlngamma_LDADD = $(LDADD)
tlngamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog_SOURCES = tlog.c
tlog_OBJECTS = tlog$U.$(OBJEXT)
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog10_SOURCES = tlog10.c
tlog10_OBJECTS = tlog10$U.$(OBJEXT)
tlog10_LDADD = $(LDADD)
tlog10_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog1p_SOURCES = tlog1p.c
tlog1p_OBJECTS = tlog1p$U.$(OBJEXT)
tlog1p_LDADD = $(LDADD)
tlog1p_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS = tlog2$U.$(OBJEXT)
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tminmax_SOURCES = tminmax.c
tminmax_OBJECTS = tminmax$U.$(OBJEXT)
tminmax_LDADD = $(LDADD)
tminmax_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmul_SOURCES = tmul.c
tmul_OBJECTS = tmul$U.$(OBJEXT)
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmul_2exp_SOURCES = tmul_2exp.c
tmul_2exp_OBJECTS = tmul_2exp$U.$(OBJEXT)
tmul_2exp_LDADD = $(LDADD)
tmul_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmul_ui_SOURCES = tmul_ui.c
tmul_ui_OBJECTS = tmul_ui$U.$(OBJEXT)
tmul_ui_LDADD = $(LDADD)
tmul_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tnext_SOURCES = tnext.c
tnext_OBJECTS = tnext$U.$(OBJEXT)
tnext_LDADD = $(LDADD)
tnext_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tout_str_SOURCES = tout_str.c
tout_str_OBJECTS = tout_str$U.$(OBJEXT)
tout_str_LDADD = $(LDADD)
tout_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
toutimpl_SOURCES = toutimpl.c
toutimpl_OBJECTS = toutimpl$U.$(OBJEXT)
toutimpl_LDADD = $(LDADD)
toutimpl_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tpow_SOURCES = tpow.c
tpow_OBJECTS = tpow$U.$(OBJEXT)
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tpow3_SOURCES = tpow3.c
tpow3_OBJECTS = tpow3$U.$(OBJEXT)
tpow3_LDADD = $(LDADD)
tpow3_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tpow_z_SOURCES = tpow_z.c
tpow_z_OBJECTS = tpow_z$U.$(OBJEXT)
tpow_z_LDADD = $(LDADD)
tpow_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
trandom_SOURCES = trandom.c
trandom_OBJECTS = trandom$U.$(OBJEXT)
trandom_LDADD = $(LDADD)
trandom_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
trint_SOURCES = trint.c
trint_OBJECTS = trint$U.$(OBJEXT)
trint_LDADD = $(LDADD)
trint_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
troot_SOURCES = troot.c
troot_OBJECTS = troot$U.$(OBJEXT)
troot_LDADD = $(LDADD)
troot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tround_prec_SOURCES = tround_prec.c
tround_prec_OBJECTS = tround_prec$U.$(OBJEXT)
tround_prec_LDADD = $(LDADD)
tround_prec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsec_SOURCES = tsec.c
tsec_OBJECTS = tsec$U.$(OBJEXT)
tsec_LDADD = $(LDADD)
tsec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsech_SOURCES = tsech.c
tsech_OBJECTS = tsech$U.$(OBJEXT)
tsech_LDADD = $(LDADD)
tsech_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_SOURCES = tset.c
tset_OBJECTS = tset$U.$(OBJEXT)
tset_LDADD = $(LDADD)
tset_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_d_SOURCES = tset_d.c
tset_d_OBJECTS = tset_d$U.$(OBJEXT)
tset_d_LDADD = $(LDADD)
tset_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_exp_SOURCES = tset_exp.c
tset_exp_OBJECTS = tset_exp$U.$(OBJEXT)
tset_exp_LDADD = $(LDADD)
tset_exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_f_SOURCES = tset_f.c
tset_f_OBJECTS = tset_f$U.$(OBJEXT)
tset_f_LDADD = $(LDADD)
tset_f_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_ld_SOURCES = tset_ld.c
tset_ld_OBJECTS = tset_ld$U.$(OBJEXT)
tset_ld_LDADD = $(LDADD)
tset_ld_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_q_SOURCES = tset_q.c
tset_q_OBJECTS = tset_q$U.$(OBJEXT)
tset_q_LDADD = $(LDADD)
tset_q_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_si_SOURCES = tset_si.c
tset_si_OBJECTS = tset_si$U.$(OBJEXT)
tset_si_LDADD = $(LDADD)
tset_si_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_sj_SOURCES = tset_sj.c
tset_sj_OBJECTS = tset_sj$U.$(OBJEXT)
tset_sj_LDADD = $(LDADD)
tset_sj_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_str_SOURCES = tset_str.c
tset_str_OBJECTS = tset_str$U.$(OBJEXT)
tset_str_LDADD = $(LDADD)
tset_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_z_SOURCES = tset_z.c
tset_z_OBJECTS = tset_z$U.$(OBJEXT)
tset_z_LDADD = $(LDADD)
tset_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsgn_SOURCES = tsgn.c
tsgn_OBJECTS = tsgn$U.$(OBJEXT)
tsgn_LDADD = $(LDADD)
tsgn_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsi_op_SOURCES = tsi_op.c
tsi_op_OBJECTS = tsi_op$U.$(OBJEXT)
tsi_op_LDADD = $(LDADD)
tsi_op_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsin_SOURCES = tsin.c
tsin_OBJECTS = tsin$U.$(OBJEXT)
tsin_LDADD = $(LDADD)
tsin_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsin_cos_SOURCES = tsin_cos.c
tsin_cos_OBJECTS = tsin_cos$U.$(OBJEXT)
tsin_cos_LDADD = $(LDADD)
tsin_cos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsinh_SOURCES = tsinh.c
tsinh_OBJECTS = tsinh$U.$(OBJEXT)
tsinh_LDADD = $(LDADD)
tsinh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsqr_SOURCES = tsqr.c
tsqr_OBJECTS = tsqr$U.$(OBJEXT)
tsqr_LDADD = $(LDADD)
tsqr_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS = tsqrt$U.$(OBJEXT)
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsqrt_ui_SOURCES = tsqrt_ui.c
tsqrt_ui_OBJECTS = tsqrt_ui$U.$(OBJEXT)
tsqrt_ui_LDADD = $(LDADD)
tsqrt_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tstckintc_SOURCES = tstckintc.c
tstckintc_OBJECTS = tstckintc$U.$(OBJEXT)
tstckintc_LDADD = $(LDADD)
tstckintc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tstrtofr_SOURCES = tstrtofr.c
tstrtofr_OBJECTS = tstrtofr$U.$(OBJEXT)
tstrtofr_LDADD = $(LDADD)
tstrtofr_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsub_SOURCES = tsub.c
tsub_OBJECTS = tsub$U.$(OBJEXT)
tsub_LDADD = $(LDADD)
tsub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsub1sp_SOURCES = tsub1sp.c
tsub1sp_OBJECTS = tsub1sp$U.$(OBJEXT)
tsub1sp_LDADD = $(LDADD)
tsub1sp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsub_ui_SOURCES = tsub_ui.c
tsub_ui_OBJECTS = tsub_ui$U.$(OBJEXT)
tsub_ui_LDADD = $(LDADD)
tsub_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsubnormal_SOURCES = tsubnormal.c
tsubnormal_OBJECTS = tsubnormal$U.$(OBJEXT)
tsubnormal_LDADD = $(LDADD)
tsubnormal_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsum_SOURCES = tsum.c
tsum_OBJECTS = tsum$U.$(OBJEXT)
tsum_LDADD = $(LDADD)
tsum_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tswap_SOURCES = tswap.c
tswap_OBJECTS = tswap$U.$(OBJEXT)
tswap_LDADD = $(LDADD)
tswap_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ttan_SOURCES = ttan.c
ttan_OBJECTS = ttan$U.$(OBJEXT)
ttan_LDADD = $(LDADD)
ttan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ttanh_SOURCES = ttanh.c
ttanh_OBJECTS = ttanh$U.$(OBJEXT)
ttanh_LDADD = $(LDADD)
ttanh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ttrunc_SOURCES = ttrunc.c
ttrunc_OBJECTS = ttrunc$U.$(OBJEXT)
ttrunc_LDADD = $(LDADD)
ttrunc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tui_div_SOURCES = tui_div.c
tui_div_OBJECTS = tui_div$U.$(OBJEXT)
tui_div_LDADD = $(LDADD)
tui_div_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tui_pow_SOURCES = tui_pow.c
tui_pow_OBJECTS = tui_pow$U.$(OBJEXT)
tui_pow_LDADD = $(LDADD)
tui_pow_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tui_sub_SOURCES = tui_sub.c
tui_sub_OBJECTS = tui_sub$U.$(OBJEXT)
tui_sub_LDADD = $(LDADD)
tui_sub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tversion_SOURCES = tversion.c
tversion_OBJECTS = tversion$U.$(OBJEXT)
tversion_LDADD = $(LDADD)
tversion_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tzeta_SOURCES = tzeta.c
tzeta_OBJECTS = tzeta$U.$(OBJEXT)
tzeta_LDADD = $(LDADD)
tzeta_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libfrtests_la_SOURCES) mpf_compat.c mpfr_compat.c reuse.c \
	tabs.c tacos.c tacosh.c tadd.c tadd1sp.c tadd_ui.c tagm.c \
	tasin.c tasinh.c tatan.c tatanh.c tcan_round.c tcbrt.c \
	tcheck.c tcmp.c tcmp2.c tcmp_d.c tcmp_ld.c tcmp_ui.c tcmpabs.c \
	tcomparisons.c tconst_catalan.c tconst_euler.c tconst_log2.c \
	tconst_pi.c tcopysign.c tcos.c tcosh.c tcot.c tcoth.c tcsc.c \
	tcsch.c tdim.c tdiv.c tdiv_ui.c teint.c teq.c terf.c \
	texceptions.c texp.c texp2.c texpm1.c tfactorial.c tfits.c \
	tfma.c tfrac.c tgamma.c tget_d.c tget_d_2exp.c tget_f.c \
	tget_sj.c tget_str.c tget_z.c tgmpop.c thyperbolic.c thypot.c \
	tinits.c tinp_str.c tisnan.c tlngamma.c tlog.c tlog10.c \
	tlog1p.c tlog2.c tminmax.c tmul.c tmul_2exp.c tmul_ui.c \
	tnext.c tout_str.c toutimpl.c tpow.c tpow3.c tpow_z.c \
	trandom.c trint.c troot.c tround_prec.c tsec.c tsech.c tset.c \
	tset_d.c tset_exp.c tset_f.c tset_ld.c tset_q.c tset_si.c \
	tset_sj.c tset_str.c tset_z.c tsgn.c tsi_op.c tsin.c \
	tsin_cos.c tsinh.c tsqr.c tsqrt.c tsqrt_ui.c tstckintc.c \
	tstrtofr.c tsub.c tsub1sp.c tsub_ui.c tsubnormal.c tsum.c \
	tswap.c ttan.c ttanh.c ttrunc.c tui_div.c tui_pow.c tui_sub.c \
	tversion.c tzeta.c
DIST_SOURCES = $(libfrtests_la_SOURCES) mpf_compat.c mpfr_compat.c \
	reuse.c tabs.c tacos.c tacosh.c tadd.c tadd1sp.c tadd_ui.c \
	tagm.c tasin.c tasinh.c tatan.c tatanh.c tcan_round.c tcbrt.c \
	tcheck.c tcmp.c tcmp2.c tcmp_d.c tcmp_ld.c tcmp_ui.c tcmpabs.c \
	tcomparisons.c tconst_catalan.c tconst_euler.c tconst_log2.c \
	tconst_pi.c tcopysign.c tcos.c tcosh.c tcot.c tcoth.c tcsc.c \
	tcsch.c tdim.c tdiv.c tdiv_ui.c teint.c teq.c terf.c \
	texceptions.c texp.c texp2.c texpm1.c tfactorial.c tfits.c \
	tfma.c tfrac.c tgamma.c tget_d.c tget_d_2exp.c tget_f.c \
	tget_sj.c tget_str.c tget_z.c tgmpop.c thyperbolic.c thypot.c \
	tinits.c tinp_str.c tisnan.c tlngamma.c tlog.c tlog10.c \
	tlog1p.c tlog2.c tminmax.c tmul.c tmul_2exp.c tmul_ui.c \
	tnext.c tout_str.c toutimpl.c tpow.c tpow3.c tpow_z.c \
	trandom.c trint.c troot.c tround_prec.c tsec.c tsech.c tset.c \
	tset_d.c tset_exp.c tset_f.c tset_ld.c tset_q.c tset_si.c \
	tset_sj.c tset_str.c tset_z.c tsgn.c tsi_op.c tsin.c \
	tsin_cos.c tsinh.c tsqr.c tsqrt.c tsqrt_ui.c tstckintc.c \
	tstrtofr.c tsub.c tsub1sp.c tsub_ui.c tsubnormal.c tsum.c \
	tswap.c ttan.c ttanh.c ttrunc.c tui_div.c tui_pow.c tui_sub.c \
	tversion.c tzeta.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MPFR_LIBM = @MPFR_LIBM@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
U = @U@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AUTOMAKE_OPTIONS = gnu $(top_builddir)/ansi2knr
EXTRA_DIST = tgeneric.c tgeneric_ui.c mpf_compat.h inp_str.data
LDADD = libfrtests.la $(MPFR_LIBM) $(top_builddir)/libmpfr.la
INCLUDES = -I$(top_srcdir) -I$(top_builddir)
LOADLIBES = $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(top_builddir)/tests/.libs/libfrtests.a $(top_builddir)/.libs/libmpfr.a $(LIBS) $(MPFR_LIBM)
check_LTLIBRARIES = libfrtests.la
libfrtests_la_SOURCES = memory.c rnd_mode.c tests.c cmp_str.c
TESTS = $(check_PROGRAMS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfrtests.la: $(libfrtests_la_OBJECTS) $(libfrtests_la_DEPENDENCIES) 
	$(LINK)  $(libfrtests_la_LDFLAGS) $(libfrtests_la_OBJECTS) $(libfrtests_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mpf_compat$(EXEEXT): $(mpf_compat_OBJECTS) $(mpf_compat_DEPENDENCIES) 
	@rm -f mpf_compat$(EXEEXT)
	$(LINK) $(mpf_compat_LDFLAGS) $(mpf_compat_OBJECTS) $(mpf_compat_LDADD) $(LIBS)
mpfr_compat$(EXEEXT): $(mpfr_compat_OBJECTS) $(mpfr_compat_DEPENDENCIES) 
	@rm -f mpfr_compat$(EXEEXT)
	$(LINK) $(mpfr_compat_LDFLAGS) $(mpfr_compat_OBJECTS) $(mpfr_compat_LDADD) $(LIBS)
reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES) 
	@rm -f reuse$(EXEEXT)
	$(LINK) $(reuse_LDFLAGS) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)
tabs$(EXEEXT): $(tabs_OBJECTS) $(tabs_DEPENDENCIES) 
	@rm -f tabs$(EXEEXT)
	$(LINK) $(tabs_LDFLAGS) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)
tacos$(EXEEXT): $(tacos_OBJECTS) $(tacos_DEPENDENCIES) 
	@rm -f tacos$(EXEEXT)
	$(LINK) $(tacos_LDFLAGS) $(tacos_OBJECTS) $(tacos_LDADD) $(LIBS)
tacosh$(EXEEXT): $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES) 
	@rm -f tacosh$(EXEEXT)
	$(LINK) $(tacosh_LDFLAGS) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)
tadd$(EXEEXT): $(tadd_OBJECTS) $(tadd_DEPENDENCIES) 
	@rm -f tadd$(EXEEXT)
	$(LINK) $(tadd_LDFLAGS) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)
tadd1sp$(EXEEXT): $(tadd1sp_OBJECTS) $(tadd1sp_DEPENDENCIES) 
	@rm -f tadd1sp$(EXEEXT)
	$(LINK) $(tadd1sp_LDFLAGS) $(tadd1sp_OBJECTS) $(tadd1sp_LDADD) $(LIBS)
tadd_ui$(EXEEXT): $(tadd_ui_OBJECTS) $(tadd_ui_DEPENDENCIES) 
	@rm -f tadd_ui$(EXEEXT)
	$(LINK) $(tadd_ui_LDFLAGS) $(tadd_ui_OBJECTS) $(tadd_ui_LDADD) $(LIBS)
tagm$(EXEEXT): $(tagm_OBJECTS) $(tagm_DEPENDENCIES) 
	@rm -f tagm$(EXEEXT)
	$(LINK) $(tagm_LDFLAGS) $(tagm_OBJECTS) $(tagm_LDADD) $(LIBS)
tasin$(EXEEXT): $(tasin_OBJECTS) $(tasin_DEPENDENCIES) 
	@rm -f tasin$(EXEEXT)
	$(LINK) $(tasin_LDFLAGS) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)
tasinh$(EXEEXT): $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES) 
	@rm -f tasinh$(EXEEXT)
	$(LINK) $(tasinh_LDFLAGS) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)
tatan$(EXEEXT): $(tatan_OBJECTS) $(tatan_DEPENDENCIES) 
	@rm -f tatan$(EXEEXT)
	$(LINK) $(tatan_LDFLAGS) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)
tatanh$(EXEEXT): $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES) 
	@rm -f tatanh$(EXEEXT)
	$(LINK) $(tatanh_LDFLAGS) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)
tcan_round$(EXEEXT): $(tcan_round_OBJECTS) $(tcan_round_DEPENDENCIES) 
	@rm -f tcan_round$(EXEEXT)
	$(LINK) $(tcan_round_LDFLAGS) $(tcan_round_OBJECTS) $(tcan_round_LDADD) $(LIBS)
tcbrt$(EXEEXT): $(tcbrt_OBJECTS) $(tcbrt_DEPENDENCIES) 
	@rm -f tcbrt$(EXEEXT)
	$(LINK) $(tcbrt_LDFLAGS) $(tcbrt_OBJECTS) $(tcbrt_LDADD) $(LIBS)
tcheck$(EXEEXT): $(tcheck_OBJECTS) $(tcheck_DEPENDENCIES) 
	@rm -f tcheck$(EXEEXT)
	$(LINK) $(tcheck_LDFLAGS) $(tcheck_OBJECTS) $(tcheck_LDADD) $(LIBS)
tcmp$(EXEEXT): $(tcmp_OBJECTS) $(tcmp_DEPENDENCIES) 
	@rm -f tcmp$(EXEEXT)
	$(LINK) $(tcmp_LDFLAGS) $(tcmp_OBJECTS) $(tcmp_LDADD) $(LIBS)
tcmp2$(EXEEXT): $(tcmp2_OBJECTS) $(tcmp2_DEPENDENCIES) 
	@rm -f tcmp2$(EXEEXT)
	$(LINK) $(tcmp2_LDFLAGS) $(tcmp2_OBJECTS) $(tcmp2_LDADD) $(LIBS)
tcmp_d$(EXEEXT): $(tcmp_d_OBJECTS) $(tcmp_d_DEPENDENCIES) 
	@rm -f tcmp_d$(EXEEXT)
	$(LINK) $(tcmp_d_LDFLAGS) $(tcmp_d_OBJECTS) $(tcmp_d_LDADD) $(LIBS)
tcmp_ld$(EXEEXT): $(tcmp_ld_OBJECTS) $(tcmp_ld_DEPENDENCIES) 
	@rm -f tcmp_ld$(EXEEXT)
	$(LINK) $(tcmp_ld_LDFLAGS) $(tcmp_ld_OBJECTS) $(tcmp_ld_LDADD) $(LIBS)
tcmp_ui$(EXEEXT): $(tcmp_ui_OBJECTS) $(tcmp_ui_DEPENDENCIES) 
	@rm -f tcmp_ui$(EXEEXT)
	$(LINK) $(tcmp_ui_LDFLAGS) $(tcmp_ui_OBJECTS) $(tcmp_ui_LDADD) $(LIBS)
tcmpabs$(EXEEXT): $(tcmpabs_OBJECTS) $(tcmpabs_DEPENDENCIES) 
	@rm -f tcmpabs$(EXEEXT)
	$(LINK) $(tcmpabs_LDFLAGS) $(tcmpabs_OBJECTS) $(tcmpabs_LDADD) $(LIBS)
tcomparisons$(EXEEXT): $(tcomparisons_OBJECTS) $(tcomparisons_DEPENDENCIES) 
	@rm -f tcomparisons$(EXEEXT)
	$(LINK) $(tcomparisons_LDFLAGS) $(tcomparisons_OBJECTS) $(tcomparisons_LDADD) $(LIBS)
tconst_catalan$(EXEEXT): $(tconst_catalan_OBJECTS) $(tconst_catalan_DEPENDENCIES) 
	@rm -f tconst_catalan$(EXEEXT)
	$(LINK) $(tconst_catalan_LDFLAGS) $(tconst_catalan_OBJECTS) $(tconst_catalan_LDADD) $(LIBS)
tconst_euler$(EXEEXT): $(tconst_euler_OBJECTS) $(tconst_euler_DEPENDENCIES) 
	@rm -f tconst_euler$(EXEEXT)
	$(LINK) $(tconst_euler_LDFLAGS) $(tconst_euler_OBJECTS) $(tconst_euler_LDADD) $(LIBS)
tconst_log2$(EXEEXT): $(tconst_log2_OBJECTS) $(tconst_log2_DEPENDENCIES) 
	@rm -f tconst_log2$(EXEEXT)
	$(LINK) $(tconst_log2_LDFLAGS) $(tconst_log2_OBJECTS) $(tconst_log2_LDADD) $(LIBS)
tconst_pi$(EXEEXT): $(tconst_pi_OBJECTS) $(tconst_pi_DEPENDENCIES) 
	@rm -f tconst_pi$(EXEEXT)
	$(LINK) $(tconst_pi_LDFLAGS) $(tconst_pi_OBJECTS) $(tconst_pi_LDADD) $(LIBS)
tcopysign$(EXEEXT): $(tcopysign_OBJECTS) $(tcopysign_DEPENDENCIES) 
	@rm -f tcopysign$(EXEEXT)
	$(LINK) $(tcopysign_LDFLAGS) $(tcopysign_OBJECTS) $(tcopysign_LDADD) $(LIBS)
tcos$(EXEEXT): $(tcos_OBJECTS) $(tcos_DEPENDENCIES) 
	@rm -f tcos$(EXEEXT)
	$(LINK) $(tcos_LDFLAGS) $(tcos_OBJECTS) $(tcos_LDADD) $(LIBS)
tcosh$(EXEEXT): $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES) 
	@rm -f tcosh$(EXEEXT)
	$(LINK) $(tcosh_LDFLAGS) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)
tcot$(EXEEXT): $(tcot_OBJECTS) $(tcot_DEPENDENCIES) 
	@rm -f tcot$(EXEEXT)
	$(LINK) $(tcot_LDFLAGS) $(tcot_OBJECTS) $(tcot_LDADD) $(LIBS)
tcoth$(EXEEXT): $(tcoth_OBJECTS) $(tcoth_DEPENDENCIES) 
	@rm -f tcoth$(EXEEXT)
	$(LINK) $(tcoth_LDFLAGS) $(tcoth_OBJECTS) $(tcoth_LDADD) $(LIBS)
tcsc$(EXEEXT): $(tcsc_OBJECTS) $(tcsc_DEPENDENCIES) 
	@rm -f tcsc$(EXEEXT)
	$(LINK) $(tcsc_LDFLAGS) $(tcsc_OBJECTS) $(tcsc_LDADD) $(LIBS)
tcsch$(EXEEXT): $(tcsch_OBJECTS) $(tcsch_DEPENDENCIES) 
	@rm -f tcsch$(EXEEXT)
	$(LINK) $(tcsch_LDFLAGS) $(tcsch_OBJECTS) $(tcsch_LDADD) $(LIBS)
tdim$(EXEEXT): $(tdim_OBJECTS) $(tdim_DEPENDENCIES) 
	@rm -f tdim$(EXEEXT)
	$(LINK) $(tdim_LDFLAGS) $(tdim_OBJECTS) $(tdim_LDADD) $(LIBS)
tdiv$(EXEEXT): $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES) 
	@rm -f tdiv$(EXEEXT)
	$(LINK) $(tdiv_LDFLAGS) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)
tdiv_ui$(EXEEXT): $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES) 
	@rm -f tdiv_ui$(EXEEXT)
	$(LINK) $(tdiv_ui_LDFLAGS) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)
teint$(EXEEXT): $(teint_OBJECTS) $(teint_DEPENDENCIES) 
	@rm -f teint$(EXEEXT)
	$(LINK) $(teint_LDFLAGS) $(teint_OBJECTS) $(teint_LDADD) $(LIBS)
teq$(EXEEXT): $(teq_OBJECTS) $(teq_DEPENDENCIES) 
	@rm -f teq$(EXEEXT)
	$(LINK) $(teq_LDFLAGS) $(teq_OBJECTS) $(teq_LDADD) $(LIBS)
terf$(EXEEXT): $(terf_OBJECTS) $(terf_DEPENDENCIES) 
	@rm -f terf$(EXEEXT)
	$(LINK) $(terf_LDFLAGS) $(terf_OBJECTS) $(terf_LDADD) $(LIBS)
texceptions$(EXEEXT): $(texceptions_OBJECTS) $(texceptions_DEPENDENCIES) 
	@rm -f texceptions$(EXEEXT)
	$(LINK) $(texceptions_LDFLAGS) $(texceptions_OBJECTS) $(texceptions_LDADD) $(LIBS)
texp$(EXEEXT): $(texp_OBJECTS) $(texp_DEPENDENCIES) 
	@rm -f texp$(EXEEXT)
	$(LINK) $(texp_LDFLAGS) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)
texp2$(EXEEXT): $(texp2_OBJECTS) $(texp2_DEPENDENCIES) 
	@rm -f texp2$(EXEEXT)
	$(LINK) $(texp2_LDFLAGS) $(texp2_OBJECTS) $(texp2_LDADD) $(LIBS)
texpm1$(EXEEXT): $(texpm1_OBJECTS) $(texpm1_DEPENDENCIES) 
	@rm -f texpm1$(EXEEXT)
	$(LINK) $(texpm1_LDFLAGS) $(texpm1_OBJECTS) $(texpm1_LDADD) $(LIBS)
tfactorial$(EXEEXT): $(tfactorial_OBJECTS) $(tfactorial_DEPENDENCIES) 
	@rm -f tfactorial$(EXEEXT)
	$(LINK) $(tfactorial_LDFLAGS) $(tfactorial_OBJECTS) $(tfactorial_LDADD) $(LIBS)
tfits$(EXEEXT): $(tfits_OBJECTS) $(tfits_DEPENDENCIES) 
	@rm -f tfits$(EXEEXT)
	$(LINK) $(tfits_LDFLAGS) $(tfits_OBJECTS) $(tfits_LDADD) $(LIBS)
tfma$(EXEEXT): $(tfma_OBJECTS) $(tfma_DEPENDENCIES) 
	@rm -f tfma$(EXEEXT)
	$(LINK) $(tfma_LDFLAGS) $(tfma_OBJECTS) $(tfma_LDADD) $(LIBS)
tfrac$(EXEEXT): $(tfrac_OBJECTS) $(tfrac_DEPENDENCIES) 
	@rm -f tfrac$(EXEEXT)
	$(LINK) $(tfrac_LDFLAGS) $(tfrac_OBJECTS) $(tfrac_LDADD) $(LIBS)
tgamma$(EXEEXT): $(tgamma_OBJECTS) $(tgamma_DEPENDENCIES) 
	@rm -f tgamma$(EXEEXT)
	$(LINK) $(tgamma_LDFLAGS) $(tgamma_OBJECTS) $(tgamma_LDADD) $(LIBS)
tget_d$(EXEEXT): $(tget_d_OBJECTS) $(tget_d_DEPENDENCIES) 
	@rm -f tget_d$(EXEEXT)
	$(LINK) $(tget_d_LDFLAGS) $(tget_d_OBJECTS) $(tget_d_LDADD) $(LIBS)
tget_d_2exp$(EXEEXT): $(tget_d_2exp_OBJECTS) $(tget_d_2exp_DEPENDENCIES) 
	@rm -f tget_d_2exp$(EXEEXT)
	$(LINK) $(tget_d_2exp_LDFLAGS) $(tget_d_2exp_OBJECTS) $(tget_d_2exp_LDADD) $(LIBS)
tget_f$(EXEEXT): $(tget_f_OBJECTS) $(tget_f_DEPENDENCIES) 
	@rm -f tget_f$(EXEEXT)
	$(LINK) $(tget_f_LDFLAGS) $(tget_f_OBJECTS) $(tget_f_LDADD) $(LIBS)
tget_sj$(EXEEXT): $(tget_sj_OBJECTS) $(tget_sj_DEPENDENCIES) 
	@rm -f tget_sj$(EXEEXT)
	$(LINK) $(tget_sj_LDFLAGS) $(tget_sj_OBJECTS) $(tget_sj_LDADD) $(LIBS)
tget_str$(EXEEXT): $(tget_str_OBJECTS) $(tget_str_DEPENDENCIES) 
	@rm -f tget_str$(EXEEXT)
	$(LINK) $(tget_str_LDFLAGS) $(tget_str_OBJECTS) $(tget_str_LDADD) $(LIBS)
tget_z$(EXEEXT): $(tget_z_OBJECTS) $(tget_z_DEPENDENCIES) 
	@rm -f tget_z$(EXEEXT)
	$(LINK) $(tget_z_LDFLAGS) $(tget_z_OBJECTS) $(tget_z_LDADD) $(LIBS)
tgmpop$(EXEEXT): $(tgmpop_OBJECTS) $(tgmpop_DEPENDENCIES) 
	@rm -f tgmpop$(EXEEXT)
	$(LINK) $(tgmpop_LDFLAGS) $(tgmpop_OBJECTS) $(tgmpop_LDADD) $(LIBS)
thyperbolic$(EXEEXT): $(thyperbolic_OBJECTS) $(thyperbolic_DEPENDENCIES) 
	@rm -f thyperbolic$(EXEEXT)
	$(LINK) $(thyperbolic_LDFLAGS) $(thyperbolic_OBJECTS) $(thyperbolic_LDADD) $(LIBS)
thypot$(EXEEXT): $(thypot_OBJECTS) $(thypot_DEPENDENCIES) 
	@rm -f thypot$(EXEEXT)
	$(LINK) $(thypot_LDFLAGS) $(thypot_OBJECTS) $(thypot_LDADD) $(LIBS)
tinits$(EXEEXT): $(tinits_OBJECTS) $(tinits_DEPENDENCIES) 
	@rm -f tinits$(EXEEXT)
	$(LINK) $(tinits_LDFLAGS) $(tinits_OBJECTS) $(tinits_LDADD) $(LIBS)
tinp_str$(EXEEXT): $(tinp_str_OBJECTS) $(tinp_str_DEPENDENCIES) 
	@rm -f tinp_str$(EXEEXT)
	$(LINK) $(tinp_str_LDFLAGS) $(tinp_str_OBJECTS) $(tinp_str_LDADD) $(LIBS)
tisnan$(EXEEXT): $(tisnan_OBJECTS) $(tisnan_DEPENDENCIES) 
	@rm -f tisnan$(EXEEXT)
	$(LINK) $(tisnan_LDFLAGS) $(tisnan_OBJECTS) $(tisnan_LDADD) $(LIBS)
tlngamma$(EXEEXT): $(tlngamma_OBJECTS) $(tlngamma_DEPENDENCIES) 
	@rm -f tlngamma$(EXEEXT)
	$(LINK) $(tlngamma_LDFLAGS) $(tlngamma_OBJECTS) $(tlngamma_LDADD) $(LIBS)
tlog$(EXEEXT): $(tlog_OBJECTS) $(tlog_DEPENDENCIES) 
	@rm -f tlog$(EXEEXT)
	$(LINK) $(tlog_LDFLAGS) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)
tlog10$(EXEEXT): $(tlog10_OBJECTS) $(tlog10_DEPENDENCIES) 
	@rm -f tlog10$(EXEEXT)
	$(LINK) $(tlog10_LDFLAGS) $(tlog10_OBJECTS) $(tlog10_LDADD) $(LIBS)
tlog1p$(EXEEXT): $(tlog1p_OBJECTS) $(tlog1p_DEPENDENCIES) 
	@rm -f tlog1p$(EXEEXT)
	$(LINK) $(tlog1p_LDFLAGS) $(tlog1p_OBJECTS) $(tlog1p_LDADD) $(LIBS)
tlog2$(EXEEXT): $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES) 
	@rm -f tlog2$(EXEEXT)
	$(LINK) $(tlog2_LDFLAGS) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)
tminmax$(EXEEXT): $(tminmax_OBJECTS) $(tminmax_DEPENDENCIES) 
	@rm -f tminmax$(EXEEXT)
	$(LINK) $(tminmax_LDFLAGS) $(tminmax_OBJECTS) $(tminmax_LDADD) $(LIBS)
tmul$(EXEEXT): $(tmul_OBJECTS) $(tmul_DEPENDENCIES) 
	@rm -f tmul$(EXEEXT)
	$(LINK) $(tmul_LDFLAGS) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)
tmul_2exp$(EXEEXT): $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES) 
	@rm -f tmul_2exp$(EXEEXT)
	$(LINK) $(tmul_2exp_LDFLAGS) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)
tmul_ui$(EXEEXT): $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES) 
	@rm -f tmul_ui$(EXEEXT)
	$(LINK) $(tmul_ui_LDFLAGS) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)
tnext$(EXEEXT): $(tnext_OBJECTS) $(tnext_DEPENDENCIES) 
	@rm -f tnext$(EXEEXT)
	$(LINK) $(tnext_LDFLAGS) $(tnext_OBJECTS) $(tnext_LDADD) $(LIBS)
tout_str$(EXEEXT): $(tout_str_OBJECTS) $(tout_str_DEPENDENCIES) 
	@rm -f tout_str$(EXEEXT)
	$(LINK) $(tout_str_LDFLAGS) $(tout_str_OBJECTS) $(tout_str_LDADD) $(LIBS)
toutimpl$(EXEEXT): $(toutimpl_OBJECTS) $(toutimpl_DEPENDENCIES) 
	@rm -f toutimpl$(EXEEXT)
	$(LINK) $(toutimpl_LDFLAGS) $(toutimpl_OBJECTS) $(toutimpl_LDADD) $(LIBS)
tpow$(EXEEXT): $(tpow_OBJECTS) $(tpow_DEPENDENCIES) 
	@rm -f tpow$(EXEEXT)
	$(LINK) $(tpow_LDFLAGS) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)
tpow3$(EXEEXT): $(tpow3_OBJECTS) $(tpow3_DEPENDENCIES) 
	@rm -f tpow3$(EXEEXT)
	$(LINK) $(tpow3_LDFLAGS) $(tpow3_OBJECTS) $(tpow3_LDADD) $(LIBS)
tpow_z$(EXEEXT): $(tpow_z_OBJECTS) $(tpow_z_DEPENDENCIES) 
	@rm -f tpow_z$(EXEEXT)
	$(LINK) $(tpow_z_LDFLAGS) $(tpow_z_OBJECTS) $(tpow_z_LDADD) $(LIBS)
trandom$(EXEEXT): $(trandom_OBJECTS) $(trandom_DEPENDENCIES) 
	@rm -f trandom$(EXEEXT)
	$(LINK) $(trandom_LDFLAGS) $(trandom_OBJECTS) $(trandom_LDADD) $(LIBS)
trint$(EXEEXT): $(trint_OBJECTS) $(trint_DEPENDENCIES) 
	@rm -f trint$(EXEEXT)
	$(LINK) $(trint_LDFLAGS) $(trint_OBJECTS) $(trint_LDADD) $(LIBS)
troot$(EXEEXT): $(troot_OBJECTS) $(troot_DEPENDENCIES) 
	@rm -f troot$(EXEEXT)
	$(LINK) $(troot_LDFLAGS) $(troot_OBJECTS) $(troot_LDADD) $(LIBS)
tround_prec$(EXEEXT): $(tround_prec_OBJECTS) $(tround_prec_DEPENDENCIES) 
	@rm -f tround_prec$(EXEEXT)
	$(LINK) $(tround_prec_LDFLAGS) $(tround_prec_OBJECTS) $(tround_prec_LDADD) $(LIBS)
tsec$(EXEEXT): $(tsec_OBJECTS) $(tsec_DEPENDENCIES) 
	@rm -f tsec$(EXEEXT)
	$(LINK) $(tsec_LDFLAGS) $(tsec_OBJECTS) $(tsec_LDADD) $(LIBS)
tsech$(EXEEXT): $(tsech_OBJECTS) $(tsech_DEPENDENCIES) 
	@rm -f tsech$(EXEEXT)
	$(LINK) $(tsech_LDFLAGS) $(tsech_OBJECTS) $(tsech_LDADD) $(LIBS)
tset$(EXEEXT): $(tset_OBJECTS) $(tset_DEPENDENCIES) 
	@rm -f tset$(EXEEXT)
	$(LINK) $(tset_LDFLAGS) $(tset_OBJECTS) $(tset_LDADD) $(LIBS)
tset_d$(EXEEXT): $(tset_d_OBJECTS) $(tset_d_DEPENDENCIES) 
	@rm -f tset_d$(EXEEXT)
	$(LINK) $(tset_d_LDFLAGS) $(tset_d_OBJECTS) $(tset_d_LDADD) $(LIBS)
tset_exp$(EXEEXT): $(tset_exp_OBJECTS) $(tset_exp_DEPENDENCIES) 
	@rm -f tset_exp$(EXEEXT)
	$(LINK) $(tset_exp_LDFLAGS) $(tset_exp_OBJECTS) $(tset_exp_LDADD) $(LIBS)
tset_f$(EXEEXT): $(tset_f_OBJECTS) $(tset_f_DEPENDENCIES) 
	@rm -f tset_f$(EXEEXT)
	$(LINK) $(tset_f_LDFLAGS) $(tset_f_OBJECTS) $(tset_f_LDADD) $(LIBS)
tset_ld$(EXEEXT): $(tset_ld_OBJECTS) $(tset_ld_DEPENDENCIES) 
	@rm -f tset_ld$(EXEEXT)
	$(LINK) $(tset_ld_LDFLAGS) $(tset_ld_OBJECTS) $(tset_ld_LDADD) $(LIBS)
tset_q$(EXEEXT): $(tset_q_OBJECTS) $(tset_q_DEPENDENCIES) 
	@rm -f tset_q$(EXEEXT)
	$(LINK) $(tset_q_LDFLAGS) $(tset_q_OBJECTS) $(tset_q_LDADD) $(LIBS)
tset_si$(EXEEXT): $(tset_si_OBJECTS) $(tset_si_DEPENDENCIES) 
	@rm -f tset_si$(EXEEXT)
	$(LINK) $(tset_si_LDFLAGS) $(tset_si_OBJECTS) $(tset_si_LDADD) $(LIBS)
tset_sj$(EXEEXT): $(tset_sj_OBJECTS) $(tset_sj_DEPENDENCIES) 
	@rm -f tset_sj$(EXEEXT)
	$(LINK) $(tset_sj_LDFLAGS) $(tset_sj_OBJECTS) $(tset_sj_LDADD) $(LIBS)
tset_str$(EXEEXT): $(tset_str_OBJECTS) $(tset_str_DEPENDENCIES) 
	@rm -f tset_str$(EXEEXT)
	$(LINK) $(tset_str_LDFLAGS) $(tset_str_OBJECTS) $(tset_str_LDADD) $(LIBS)
tset_z$(EXEEXT): $(tset_z_OBJECTS) $(tset_z_DEPENDENCIES) 
	@rm -f tset_z$(EXEEXT)
	$(LINK) $(tset_z_LDFLAGS) $(tset_z_OBJECTS) $(tset_z_LDADD) $(LIBS)
tsgn$(EXEEXT): $(tsgn_OBJECTS) $(tsgn_DEPENDENCIES) 
	@rm -f tsgn$(EXEEXT)
	$(LINK) $(tsgn_LDFLAGS) $(tsgn_OBJECTS) $(tsgn_LDADD) $(LIBS)
tsi_op$(EXEEXT): $(tsi_op_OBJECTS) $(tsi_op_DEPENDENCIES) 
	@rm -f tsi_op$(EXEEXT)
	$(LINK) $(tsi_op_LDFLAGS) $(tsi_op_OBJECTS) $(tsi_op_LDADD) $(LIBS)
tsin$(EXEEXT): $(tsin_OBJECTS) $(tsin_DEPENDENCIES) 
	@rm -f tsin$(EXEEXT)
	$(LINK) $(tsin_LDFLAGS) $(tsin_OBJECTS) $(tsin_LDADD) $(LIBS)
tsin_cos$(EXEEXT): $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES) 
	@rm -f tsin_cos$(EXEEXT)
	$(LINK) $(tsin_cos_LDFLAGS) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)
tsinh$(EXEEXT): $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES) 
	@rm -f tsinh$(EXEEXT)
	$(LINK) $(tsinh_LDFLAGS) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)
tsqr$(EXEEXT): $(tsqr_OBJECTS) $(tsqr_DEPENDENCIES) 
	@rm -f tsqr$(EXEEXT)
	$(LINK) $(tsqr_LDFLAGS) $(tsqr_OBJECTS) $(tsqr_LDADD) $(LIBS)
tsqrt$(EXEEXT): $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES) 
	@rm -f tsqrt$(EXEEXT)
	$(LINK) $(tsqrt_LDFLAGS) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)
tsqrt_ui$(EXEEXT): $(tsqrt_ui_OBJECTS) $(tsqrt_ui_DEPENDENCIES) 
	@rm -f tsqrt_ui$(EXEEXT)
	$(LINK) $(tsqrt_ui_LDFLAGS) $(tsqrt_ui_OBJECTS) $(tsqrt_ui_LDADD) $(LIBS)
tstckintc$(EXEEXT): $(tstckintc_OBJECTS) $(tstckintc_DEPENDENCIES) 
	@rm -f tstckintc$(EXEEXT)
	$(LINK) $(tstckintc_LDFLAGS) $(tstckintc_OBJECTS) $(tstckintc_LDADD) $(LIBS)
tstrtofr$(EXEEXT): $(tstrtofr_OBJECTS) $(tstrtofr_DEPENDENCIES) 
	@rm -f tstrtofr$(EXEEXT)
	$(LINK) $(tstrtofr_LDFLAGS) $(tstrtofr_OBJECTS) $(tstrtofr_LDADD) $(LIBS)
tsub$(EXEEXT): $(tsub_OBJECTS) $(tsub_DEPENDENCIES) 
	@rm -f tsub$(EXEEXT)
	$(LINK) $(tsub_LDFLAGS) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)
tsub1sp$(EXEEXT): $(tsub1sp_OBJECTS) $(tsub1sp_DEPENDENCIES) 
	@rm -f tsub1sp$(EXEEXT)
	$(LINK) $(tsub1sp_LDFLAGS) $(tsub1sp_OBJECTS) $(tsub1sp_LDADD) $(LIBS)
tsub_ui$(EXEEXT): $(tsub_ui_OBJECTS) $(tsub_ui_DEPENDENCIES) 
	@rm -f tsub_ui$(EXEEXT)
	$(LINK) $(tsub_ui_LDFLAGS) $(tsub_ui_OBJECTS) $(tsub_ui_LDADD) $(LIBS)
tsubnormal$(EXEEXT): $(tsubnormal_OBJECTS) $(tsubnormal_DEPENDENCIES) 
	@rm -f tsubnormal$(EXEEXT)
	$(LINK) $(tsubnormal_LDFLAGS) $(tsubnormal_OBJECTS) $(tsubnormal_LDADD) $(LIBS)
tsum$(EXEEXT): $(tsum_OBJECTS) $(tsum_DEPENDENCIES) 
	@rm -f tsum$(EXEEXT)
	$(LINK) $(tsum_LDFLAGS) $(tsum_OBJECTS) $(tsum_LDADD) $(LIBS)
tswap$(EXEEXT): $(tswap_OBJECTS) $(tswap_DEPENDENCIES) 
	@rm -f tswap$(EXEEXT)
	$(LINK) $(tswap_LDFLAGS) $(tswap_OBJECTS) $(tswap_LDADD) $(LIBS)
ttan$(EXEEXT): $(ttan_OBJECTS) $(ttan_DEPENDENCIES) 
	@rm -f ttan$(EXEEXT)
	$(LINK) $(ttan_LDFLAGS) $(ttan_OBJECTS) $(ttan_LDADD) $(LIBS)
ttanh$(EXEEXT): $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES) 
	@rm -f ttanh$(EXEEXT)
	$(LINK) $(ttanh_LDFLAGS) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)
ttrunc$(EXEEXT): $(ttrunc_OBJECTS) $(ttrunc_DEPENDENCIES) 
	@rm -f ttrunc$(EXEEXT)
	$(LINK) $(ttrunc_LDFLAGS) $(ttrunc_OBJECTS) $(ttrunc_LDADD) $(LIBS)
tui_div$(EXEEXT): $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES) 
	@rm -f tui_div$(EXEEXT)
	$(LINK) $(tui_div_LDFLAGS) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)
tui_pow$(EXEEXT): $(tui_pow_OBJECTS) $(tui_pow_DEPENDENCIES) 
	@rm -f tui_pow$(EXEEXT)
	$(LINK) $(tui_pow_LDFLAGS) $(tui_pow_OBJECTS) $(tui_pow_LDADD) $(LIBS)
tui_sub$(EXEEXT): $(tui_sub_OBJECTS) $(tui_sub_DEPENDENCIES) 
	@rm -f tui_sub$(EXEEXT)
	$(LINK) $(tui_sub_LDFLAGS) $(tui_sub_OBJECTS) $(tui_sub_LDADD) $(LIBS)
tversion$(EXEEXT): $(tversion_OBJECTS) $(tversion_DEPENDENCIES) 
	@rm -f tversion$(EXEEXT)
	$(LINK) $(tversion_LDFLAGS) $(tversion_OBJECTS) $(tversion_LDADD) $(LIBS)
tzeta$(EXEEXT): $(tzeta_OBJECTS) $(tzeta_DEPENDENCIES) 
	@rm -f tzeta$(EXEEXT)
	$(LINK) $(tzeta_LDFLAGS) $(tzeta_OBJECTS) $(tzeta_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c
$(top_builddir)/ansi2knr:
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) ansi2knr

mostlyclean-kr:
	-test "$U" = "" || rm -f *_.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmp_str$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpf_compat$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpfr_compat$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reuse$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rnd_mode$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabs$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacos$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacosh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd1sp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagm$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasin$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasinh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatanh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcan_round$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcbrt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcheck$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_ld$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmpabs$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcomparisons$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_catalan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_euler$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_log2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_pi$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcopysign$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcos$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcosh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcot$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcoth$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcsc$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcsch$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdim$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teint$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teq$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terf$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texceptions$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texpm1$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfactorial$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfits$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfrac$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgamma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_d_2exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_f$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_sj$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_z$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgmpop$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thyperbolic$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thypot$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinits$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinp_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tisnan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlngamma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog10$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog1p$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tminmax$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_2exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnext$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tout_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toutimpl$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow3$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_z$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trandom$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trint$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/troot$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tround_prec$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsec$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsech$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_f$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_ld$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_q$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_si$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_sj$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_z$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsgn$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsi_op$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin_cos$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsinh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqr$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstckintc$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstrtofr$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub1sp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsubnormal$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsum$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tswap$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttanh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttrunc$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_div$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_pow$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_sub$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tversion$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tzeta$U.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
cmp_str_.c: cmp_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cmp_str.c; then echo $(srcdir)/cmp_str.c; else echo cmp_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
memory_.c: memory.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/memory.c; then echo $(srcdir)/memory.c; else echo memory.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
mpf_compat_.c: mpf_compat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/mpf_compat.c; then echo $(srcdir)/mpf_compat.c; else echo mpf_compat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
mpfr_compat_.c: mpfr_compat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/mpfr_compat.c; then echo $(srcdir)/mpfr_compat.c; else echo mpfr_compat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
reuse_.c: reuse.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/reuse.c; then echo $(srcdir)/reuse.c; else echo reuse.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
rnd_mode_.c: rnd_mode.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/rnd_mode.c; then echo $(srcdir)/rnd_mode.c; else echo rnd_mode.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tabs_.c: tabs.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tabs.c; then echo $(srcdir)/tabs.c; else echo tabs.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tacos_.c: tacos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tacos.c; then echo $(srcdir)/tacos.c; else echo tacos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tacosh_.c: tacosh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tacosh.c; then echo $(srcdir)/tacosh.c; else echo tacosh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd_.c: tadd.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd.c; then echo $(srcdir)/tadd.c; else echo tadd.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd1sp_.c: tadd1sp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd1sp.c; then echo $(srcdir)/tadd1sp.c; else echo tadd1sp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd_ui_.c: tadd_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd_ui.c; then echo $(srcdir)/tadd_ui.c; else echo tadd_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tagm_.c: tagm.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tagm.c; then echo $(srcdir)/tagm.c; else echo tagm.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tasin_.c: tasin.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tasin.c; then echo $(srcdir)/tasin.c; else echo tasin.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tasinh_.c: tasinh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tasinh.c; then echo $(srcdir)/tasinh.c; else echo tasinh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tatan_.c: tatan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tatan.c; then echo $(srcdir)/tatan.c; else echo tatan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tatanh_.c: tatanh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tatanh.c; then echo $(srcdir)/tatanh.c; else echo tatanh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcan_round_.c: tcan_round.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcan_round.c; then echo $(srcdir)/tcan_round.c; else echo tcan_round.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcbrt_.c: tcbrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcbrt.c; then echo $(srcdir)/tcbrt.c; else echo tcbrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcheck_.c: tcheck.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcheck.c; then echo $(srcdir)/tcheck.c; else echo tcheck.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_.c: tcmp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp.c; then echo $(srcdir)/tcmp.c; else echo tcmp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp2_.c: tcmp2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp2.c; then echo $(srcdir)/tcmp2.c; else echo tcmp2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_d_.c: tcmp_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_d.c; then echo $(srcdir)/tcmp_d.c; else echo tcmp_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_ld_.c: tcmp_ld.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_ld.c; then echo $(srcdir)/tcmp_ld.c; else echo tcmp_ld.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_ui_.c: tcmp_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_ui.c; then echo $(srcdir)/tcmp_ui.c; else echo tcmp_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmpabs_.c: tcmpabs.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmpabs.c; then echo $(srcdir)/tcmpabs.c; else echo tcmpabs.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcomparisons_.c: tcomparisons.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcomparisons.c; then echo $(srcdir)/tcomparisons.c; else echo tcomparisons.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_catalan_.c: tconst_catalan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_catalan.c; then echo $(srcdir)/tconst_catalan.c; else echo tconst_catalan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_euler_.c: tconst_euler.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_euler.c; then echo $(srcdir)/tconst_euler.c; else echo tconst_euler.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_log2_.c: tconst_log2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_log2.c; then echo $(srcdir)/tconst_log2.c; else echo tconst_log2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_pi_.c: tconst_pi.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_pi.c; then echo $(srcdir)/tconst_pi.c; else echo tconst_pi.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcopysign_.c: tcopysign.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcopysign.c; then echo $(srcdir)/tcopysign.c; else echo tcopysign.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcos_.c: tcos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcos.c; then echo $(srcdir)/tcos.c; else echo tcos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcosh_.c: tcosh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcosh.c; then echo $(srcdir)/tcosh.c; else echo tcosh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcot_.c: tcot.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcot.c; then echo $(srcdir)/tcot.c; else echo tcot.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcoth_.c: tcoth.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcoth.c; then echo $(srcdir)/tcoth.c; else echo tcoth.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcsc_.c: tcsc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcsc.c; then echo $(srcdir)/tcsc.c; else echo tcsc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcsch_.c: tcsch.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcsch.c; then echo $(srcdir)/tcsch.c; else echo tcsch.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdim_.c: tdim.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdim.c; then echo $(srcdir)/tdim.c; else echo tdim.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdiv_.c: tdiv.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdiv.c; then echo $(srcdir)/tdiv.c; else echo tdiv.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdiv_ui_.c: tdiv_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdiv_ui.c; then echo $(srcdir)/tdiv_ui.c; else echo tdiv_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
teint_.c: teint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/teint.c; then echo $(srcdir)/teint.c; else echo teint.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
teq_.c: teq.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/teq.c; then echo $(srcdir)/teq.c; else echo teq.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
terf_.c: terf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/terf.c; then echo $(srcdir)/terf.c; else echo terf.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tests_.c: tests.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tests.c; then echo $(srcdir)/tests.c; else echo tests.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texceptions_.c: texceptions.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texceptions.c; then echo $(srcdir)/texceptions.c; else echo texceptions.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texp_.c: texp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texp.c; then echo $(srcdir)/texp.c; else echo texp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texp2_.c: texp2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texp2.c; then echo $(srcdir)/texp2.c; else echo texp2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texpm1_.c: texpm1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texpm1.c; then echo $(srcdir)/texpm1.c; else echo texpm1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfactorial_.c: tfactorial.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfactorial.c; then echo $(srcdir)/tfactorial.c; else echo tfactorial.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfits_.c: tfits.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfits.c; then echo $(srcdir)/tfits.c; else echo tfits.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfma_.c: tfma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfma.c; then echo $(srcdir)/tfma.c; else echo tfma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfrac_.c: tfrac.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfrac.c; then echo $(srcdir)/tfrac.c; else echo tfrac.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tgamma_.c: tgamma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tgamma.c; then echo $(srcdir)/tgamma.c; else echo tgamma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_d_.c: tget_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_d.c; then echo $(srcdir)/tget_d.c; else echo tget_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_d_2exp_.c: tget_d_2exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_d_2exp.c; then echo $(srcdir)/tget_d_2exp.c; else echo tget_d_2exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_f_.c: tget_f.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_f.c; then echo $(srcdir)/tget_f.c; else echo tget_f.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_sj_.c: tget_sj.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_sj.c; then echo $(srcdir)/tget_sj.c; else echo tget_sj.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_str_.c: tget_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_str.c; then echo $(srcdir)/tget_str.c; else echo tget_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_z_.c: tget_z.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_z.c; then echo $(srcdir)/tget_z.c; else echo tget_z.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tgmpop_.c: tgmpop.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tgmpop.c; then echo $(srcdir)/tgmpop.c; else echo tgmpop.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
thyperbolic_.c: thyperbolic.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/thyperbolic.c; then echo $(srcdir)/thyperbolic.c; else echo thyperbolic.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
thypot_.c: thypot.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/thypot.c; then echo $(srcdir)/thypot.c; else echo thypot.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tinits_.c: tinits.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tinits.c; then echo $(srcdir)/tinits.c; else echo tinits.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tinp_str_.c: tinp_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tinp_str.c; then echo $(srcdir)/tinp_str.c; else echo tinp_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tisnan_.c: tisnan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tisnan.c; then echo $(srcdir)/tisnan.c; else echo tisnan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlngamma_.c: tlngamma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlngamma.c; then echo $(srcdir)/tlngamma.c; else echo tlngamma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog_.c: tlog.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog.c; then echo $(srcdir)/tlog.c; else echo tlog.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog10_.c: tlog10.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog10.c; then echo $(srcdir)/tlog10.c; else echo tlog10.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog1p_.c: tlog1p.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog1p.c; then echo $(srcdir)/tlog1p.c; else echo tlog1p.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog2_.c: tlog2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog2.c; then echo $(srcdir)/tlog2.c; else echo tlog2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tminmax_.c: tminmax.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tminmax.c; then echo $(srcdir)/tminmax.c; else echo tminmax.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_.c: tmul.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul.c; then echo $(srcdir)/tmul.c; else echo tmul.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_2exp_.c: tmul_2exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul_2exp.c; then echo $(srcdir)/tmul_2exp.c; else echo tmul_2exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_ui_.c: tmul_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul_ui.c; then echo $(srcdir)/tmul_ui.c; else echo tmul_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tnext_.c: tnext.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tnext.c; then echo $(srcdir)/tnext.c; else echo tnext.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tout_str_.c: tout_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tout_str.c; then echo $(srcdir)/tout_str.c; else echo tout_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
toutimpl_.c: toutimpl.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/toutimpl.c; then echo $(srcdir)/toutimpl.c; else echo toutimpl.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow_.c: tpow.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow.c; then echo $(srcdir)/tpow.c; else echo tpow.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow3_.c: tpow3.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow3.c; then echo $(srcdir)/tpow3.c; else echo tpow3.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow_z_.c: tpow_z.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow_z.c; then echo $(srcdir)/tpow_z.c; else echo tpow_z.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
trandom_.c: trandom.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trandom.c; then echo $(srcdir)/trandom.c; else echo trandom.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
trint_.c: trint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trint.c; then echo $(srcdir)/trint.c; else echo trint.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
troot_.c: troot.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/troot.c; then echo $(srcdir)/troot.c; else echo troot.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tround_prec_.c: tround_prec.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tround_prec.c; then echo $(srcdir)/tround_prec.c; else echo tround_prec.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsec_.c: tsec.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsec.c; then echo $(srcdir)/tsec.c; else echo tsec.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsech_.c: tsech.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsech.c; then echo $(srcdir)/tsech.c; else echo tsech.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_.c: tset.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset.c; then echo $(srcdir)/tset.c; else echo tset.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_d_.c: tset_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_d.c; then echo $(srcdir)/tset_d.c; else echo tset_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_exp_.c: tset_exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_exp.c; then echo $(srcdir)/tset_exp.c; else echo tset_exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_f_.c: tset_f.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_f.c; then echo $(srcdir)/tset_f.c; else echo tset_f.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_ld_.c: tset_ld.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_ld.c; then echo $(srcdir)/tset_ld.c; else echo tset_ld.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_q_.c: tset_q.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_q.c; then echo $(srcdir)/tset_q.c; else echo tset_q.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_si_.c: tset_si.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_si.c; then echo $(srcdir)/tset_si.c; else echo tset_si.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_sj_.c: tset_sj.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_sj.c; then echo $(srcdir)/tset_sj.c; else echo tset_sj.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_str_.c: tset_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_str.c; then echo $(srcdir)/tset_str.c; else echo tset_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_z_.c: tset_z.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_z.c; then echo $(srcdir)/tset_z.c; else echo tset_z.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsgn_.c: tsgn.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsgn.c; then echo $(srcdir)/tsgn.c; else echo tsgn.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsi_op_.c: tsi_op.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsi_op.c; then echo $(srcdir)/tsi_op.c; else echo tsi_op.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsin_.c: tsin.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsin.c; then echo $(srcdir)/tsin.c; else echo tsin.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsin_cos_.c: tsin_cos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsin_cos.c; then echo $(srcdir)/tsin_cos.c; else echo tsin_cos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsinh_.c: tsinh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsinh.c; then echo $(srcdir)/tsinh.c; else echo tsinh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqr_.c: tsqr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqr.c; then echo $(srcdir)/tsqr.c; else echo tsqr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqrt_.c: tsqrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqrt.c; then echo $(srcdir)/tsqrt.c; else echo tsqrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqrt_ui_.c: tsqrt_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqrt_ui.c; then echo $(srcdir)/tsqrt_ui.c; else echo tsqrt_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tstckintc_.c: tstckintc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tstckintc.c; then echo $(srcdir)/tstckintc.c; else echo tstckintc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tstrtofr_.c: tstrtofr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tstrtofr.c; then echo $(srcdir)/tstrtofr.c; else echo tstrtofr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub_.c: tsub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub.c; then echo $(srcdir)/tsub.c; else echo tsub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub1sp_.c: tsub1sp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub1sp.c; then echo $(srcdir)/tsub1sp.c; else echo tsub1sp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub_ui_.c: tsub_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub_ui.c; then echo $(srcdir)/tsub_ui.c; else echo tsub_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsubnormal_.c: tsubnormal.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsubnormal.c; then echo $(srcdir)/tsubnormal.c; else echo tsubnormal.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsum_.c: tsum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsum.c; then echo $(srcdir)/tsum.c; else echo tsum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tswap_.c: tswap.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tswap.c; then echo $(srcdir)/tswap.c; else echo tswap.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttan_.c: ttan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttan.c; then echo $(srcdir)/ttan.c; else echo ttan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttanh_.c: ttanh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttanh.c; then echo $(srcdir)/ttanh.c; else echo ttanh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttrunc_.c: ttrunc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttrunc.c; then echo $(srcdir)/ttrunc.c; else echo ttrunc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_div_.c: tui_div.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_div.c; then echo $(srcdir)/tui_div.c; else echo tui_div.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_pow_.c: tui_pow.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_pow.c; then echo $(srcdir)/tui_pow.c; else echo tui_pow.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_sub_.c: tui_sub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_sub.c; then echo $(srcdir)/tui_sub.c; else echo tui_sub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tversion_.c: tversion.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tversion.c; then echo $(srcdir)/tversion.c; else echo tversion.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tzeta_.c: tzeta.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tzeta.c; then echo $(srcdir)/tzeta.c; else echo tzeta.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
cmp_str_.$(OBJEXT) cmp_str_.lo memory_.$(OBJEXT) memory_.lo \
mpf_compat_.$(OBJEXT) mpf_compat_.lo mpfr_compat_.$(OBJEXT) \
mpfr_compat_.lo reuse_.$(OBJEXT) reuse_.lo rnd_mode_.$(OBJEXT) \
rnd_mode_.lo tabs_.$(OBJEXT) tabs_.lo tacos_.$(OBJEXT) tacos_.lo \
tacosh_.$(OBJEXT) tacosh_.lo tadd_.$(OBJEXT) tadd_.lo \
tadd1sp_.$(OBJEXT) tadd1sp_.lo tadd_ui_.$(OBJEXT) tadd_ui_.lo \
tagm_.$(OBJEXT) tagm_.lo tasin_.$(OBJEXT) tasin_.lo tasinh_.$(OBJEXT) \
tasinh_.lo tatan_.$(OBJEXT) tatan_.lo tatanh_.$(OBJEXT) tatanh_.lo \
tcan_round_.$(OBJEXT) tcan_round_.lo tcbrt_.$(OBJEXT) tcbrt_.lo \
tcheck_.$(OBJEXT) tcheck_.lo tcmp_.$(OBJEXT) tcmp_.lo tcmp2_.$(OBJEXT) \
tcmp2_.lo tcmp_d_.$(OBJEXT) tcmp_d_.lo tcmp_ld_.$(OBJEXT) tcmp_ld_.lo \
tcmp_ui_.$(OBJEXT) tcmp_ui_.lo tcmpabs_.$(OBJEXT) tcmpabs_.lo \
tcomparisons_.$(OBJEXT) tcomparisons_.lo tconst_catalan_.$(OBJEXT) \
tconst_catalan_.lo tconst_euler_.$(OBJEXT) tconst_euler_.lo \
tconst_log2_.$(OBJEXT) tconst_log2_.lo tconst_pi_.$(OBJEXT) \
tconst_pi_.lo tcopysign_.$(OBJEXT) tcopysign_.lo tcos_.$(OBJEXT) \
tcos_.lo tcosh_.$(OBJEXT) tcosh_.lo tcot_.$(OBJEXT) tcot_.lo \
tcoth_.$(OBJEXT) tcoth_.lo tcsc_.$(OBJEXT) tcsc_.lo tcsch_.$(OBJEXT) \
tcsch_.lo tdim_.$(OBJEXT) tdim_.lo tdiv_.$(OBJEXT) tdiv_.lo \
tdiv_ui_.$(OBJEXT) tdiv_ui_.lo teint_.$(OBJEXT) teint_.lo \
teq_.$(OBJEXT) teq_.lo terf_.$(OBJEXT) terf_.lo tests_.$(OBJEXT) \
tests_.lo texceptions_.$(OBJEXT) texceptions_.lo texp_.$(OBJEXT) \
texp_.lo texp2_.$(OBJEXT) texp2_.lo texpm1_.$(OBJEXT) texpm1_.lo \
tfactorial_.$(OBJEXT) tfactorial_.lo tfits_.$(OBJEXT) tfits_.lo \
tfma_.$(OBJEXT) tfma_.lo tfrac_.$(OBJEXT) tfrac_.lo tgamma_.$(OBJEXT) \
tgamma_.lo tget_d_.$(OBJEXT) tget_d_.lo tget_d_2exp_.$(OBJEXT) \
tget_d_2exp_.lo tget_f_.$(OBJEXT) tget_f_.lo tget_sj_.$(OBJEXT) \
tget_sj_.lo tget_str_.$(OBJEXT) tget_str_.lo tget_z_.$(OBJEXT) \
tget_z_.lo tgmpop_.$(OBJEXT) tgmpop_.lo thyperbolic_.$(OBJEXT) \
thyperbolic_.lo thypot_.$(OBJEXT) thypot_.lo tinits_.$(OBJEXT) \
tinits_.lo tinp_str_.$(OBJEXT) tinp_str_.lo tisnan_.$(OBJEXT) \
tisnan_.lo tlngamma_.$(OBJEXT) tlngamma_.lo tlog_.$(OBJEXT) tlog_.lo \
tlog10_.$(OBJEXT) tlog10_.lo tlog1p_.$(OBJEXT) tlog1p_.lo \
tlog2_.$(OBJEXT) tlog2_.lo tminmax_.$(OBJEXT) tminmax_.lo \
tmul_.$(OBJEXT) tmul_.lo tmul_2exp_.$(OBJEXT) tmul_2exp_.lo \
tmul_ui_.$(OBJEXT) tmul_ui_.lo tnext_.$(OBJEXT) tnext_.lo \
tout_str_.$(OBJEXT) tout_str_.lo toutimpl_.$(OBJEXT) toutimpl_.lo \
tpow_.$(OBJEXT) tpow_.lo tpow3_.$(OBJEXT) tpow3_.lo tpow_z_.$(OBJEXT) \
tpow_z_.lo trandom_.$(OBJEXT) trandom_.lo trint_.$(OBJEXT) trint_.lo \
troot_.$(OBJEXT) troot_.lo tround_prec_.$(OBJEXT) tround_prec_.lo \
tsec_.$(OBJEXT) tsec_.lo tsech_.$(OBJEXT) tsech_.lo tset_.$(OBJEXT) \
tset_.lo tset_d_.$(OBJEXT) tset_d_.lo tset_exp_.$(OBJEXT) tset_exp_.lo \
tset_f_.$(OBJEXT) tset_f_.lo tset_ld_.$(OBJEXT) tset_ld_.lo \
tset_q_.$(OBJEXT) tset_q_.lo tset_si_.$(OBJEXT) tset_si_.lo \
tset_sj_.$(OBJEXT) tset_sj_.lo tset_str_.$(OBJEXT) tset_str_.lo \
tset_z_.$(OBJEXT) tset_z_.lo tsgn_.$(OBJEXT) tsgn_.lo \
tsi_op_.$(OBJEXT) tsi_op_.lo tsin_.$(OBJEXT) tsin_.lo \
tsin_cos_.$(OBJEXT) tsin_cos_.lo tsinh_.$(OBJEXT) tsinh_.lo \
tsqr_.$(OBJEXT) tsqr_.lo tsqrt_.$(OBJEXT) tsqrt_.lo \
tsqrt_ui_.$(OBJEXT) tsqrt_ui_.lo tstckintc_.$(OBJEXT) tstckintc_.lo \
tstrtofr_.$(OBJEXT) tstrtofr_.lo tsub_.$(OBJEXT) tsub_.lo \
tsub1sp_.$(OBJEXT) tsub1sp_.lo tsub_ui_.$(OBJEXT) tsub_ui_.lo \
tsubnormal_.$(OBJEXT) tsubnormal_.lo tsum_.$(OBJEXT) tsum_.lo \
tswap_.$(OBJEXT) tswap_.lo ttan_.$(OBJEXT) ttan_.lo ttanh_.$(OBJEXT) \
ttanh_.lo ttrunc_.$(OBJEXT) ttrunc_.lo tui_div_.$(OBJEXT) tui_div_.lo \
tui_pow_.$(OBJEXT) tui_pow_.lo tui_sub_.$(OBJEXT) tui_sub_.lo \
tversion_.$(OBJEXT) tversion_.lo tzeta_.$(OBJEXT) tzeta_.lo : \
$(ANSI2KNR)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic mostlyclean-kr \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-kr mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am


$(top_builddir)/libmpfr.la:
	cd $(top_builddir); make libmpfr.la
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
